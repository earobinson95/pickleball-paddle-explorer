---
title: "Pickleball Paddle Explorer"
format: dashboard
server: shiny
execute:
  warning: false
  message: false
  echo: false
---

<!-- <https://quarto.org/docs/interactive/shiny/> -->

```{r}
#| context: setup

library(tidyverse)
library(janitor)
library(DT)
library(plotly)

data_orig <-
  read_csv("paddle-metrics-7-11-25.csv"
           ) |>
  clean_names() |>
  mutate(across(c(retail_price,
                  discounted_price),
                .f = ~ as.numeric(str_remove(.x, "\\$"))
                )
         ) |>
  mutate(across(c(spin_percentile,
                  swing_weight_percentile,
                  twist_weight_percentile,
                  balance_point_percentile,
                  power_percentile,
                  pop_percentile),
                .f = ~ as.numeric(str_remove(.x, "\\%"))
                )
         ) |>
  mutate(across(where(is.character), ~ iconv(.x, from = "", to = "UTF-8", sub = "byte"))) |>
  select(company:firepower_0_100)
```

# {.sidebar}

```{r}
selectizeInput(inputId = "company",
               label = "Company",
               choices = unique(data_orig$company),
               multiple = TRUE,
               width = "50%"
            )

sliderInput(
  inputId = "retail_price",
  label = "Retail Price ($)",
  min = floor(min(data_orig$retail_price, na.rm = TRUE)),
  max = ceiling(max(data_orig$retail_price, na.rm = TRUE)),
  value = c(70, 180),  # Default range
  step = 1,
  pre = "$"
)

checkboxGroupInput(
  inputId = "features",
  label = "Choose features to compare:",
  choices = c(
    "Shape" = "shape",
    "Spin (RPM)" = "spin_rpm",
    "Spin (%)"   = "spin_percentile",
    "Power (%)" = "power_percentile",
    "Core Thickness (mm)" = "core_thickness_mm",
    "Surface Material" = "surface_material",
    "Core Material" = "core_material",
    "Certification Status" = "certification_status"
  ),
  selected = c("spin_percentile",
               "power_percentile"
               )  # default selection
)
```

# Data

```{r}
dataTableOutput("data")
```

# Plot: Spin vs Power

```{r}
plotlyOutput("p1")
```

# Congrats! You picked a paddle!

Once you pick a paddle, please refer back to the original database at <https://www.johnkewpickleball.com/paddle-database> to check the certification status, discount code, and link to purchase.

```{r}
#| context: server

# filter data
data_orig <- reactive({
  read_csv("Paddle-Metrics-Master-Squarespace Version(Published 7-11-25).csv",
           locale = locale(encoding = "UTF-8")
           ) |> 
  clean_names() |>
  mutate(across(where(is.character), ~ iconv(.x, from = "", to = "UTF-8", sub = "byte"))) |>
  mutate(across(c(retail_price, 
                  discounted_price), 
                .f = ~ as.numeric(str_remove(.x, "\\$"))
                )
         ) |> 
  mutate(across(c(spin_percentile, 
                  swing_weight_percentile, 
                  twist_weight_percentile, 
                  balance_point_percentile, 
                  power_percentile, 
                  pop_percentile), 
                .f = ~ as.numeric(str_remove(.x, "\\%"))
                )
         ) %>%
  {
    if (!is.null(input$company)) {
      filter(., company %in% input$company)
    } else {
      .
    }
  } %>%
  filter(between(retail_price, input$retail_price[1], input$retail_price[2])) |> 
  select(company:firepower_0_100)
})
 

# spin vs power percentile
output$p1 <- renderPlotly({
  
  req(data_orig())
  
  p1_gg <- data_orig() |> 
    ggplot(aes(x = spin_percentile,
               y = power_percentile,
               label = paddle)
           ) +
    geom_point(color = "steelblue") +
    scale_x_continuous(limits = c(0,100), breaks = seq(0,100,20)) +
    scale_y_continuous(limits = c(0,100), breaks = seq(0,100,20)) +
    facet_wrap(~ shape) +
    theme_minimal() +
    labs(x = "Spin (%)",
         y = "Power (%)")
  
  ggplotly(p1_gg)
})

# data table
output$data <- DT::renderDataTable({
  
  req(data_orig())

  DT::datatable(
    data_orig() |>  select(company, paddle, retail_price, input$features),
    options = list(
      autoWidth = FALSE,
      scrollX = TRUE,
      order = list()  # Disable default sorting
    ),
    rownames = FALSE,
    filter = "none"
  )
  
})
```
